---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: influxdb
  namespace: database
spec:
  interval: 1h
  releaseName: influxdb
  chart:
    spec:
      # renovate: registryUrl=https://helm.influxdata.com/
      chart: influxdb2
      version: 2.1.1
      sourceRef:
        kind: HelmRepository
        name: influxdata-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: "influxdb"
      tag: "2.7.4-alpine"
    service:
      type: ClusterIP
      port: 80
      targetPort: 8086
      portName: http
    ingress:
      enabled: true
      annotations:
          cert-manager.io/issuer: prod-issuer
          cert-manager.io/issuer-kind: OriginIssuer
          cert-manager.io/issuer-group: cert-manager.k8s.cloudflare.com
          field.cattle.io/publicEndpoints: '[{"addresses":["${METALLB_TRAEFIK_ADDR}"],"port":443,"protocol":"HTTPS","serviceName":"database:influxdb","ingressName":"database:influxdb","hostname":"influxdb.${CLUSTER_DOMAIN}","allNodes":false}]'
          meta.helm.sh/release-name: influxdb
          meta.helm.sh/release-namespace: database
          nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
          nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      hostname: influxdb.${CLUSTER_DOMAIN}
      path: /
      tls: true
      secretName: influxdb-tls
    livenessProbe:
      timeoutSeconds: 10
    readinessProbe:
      timeoutSeconds: 10
    startupProbe:
      enabled: true
      failureThreshold: 10
      periodSeconds: 10
    persistence:
      enabled: true
      useExisting: true
      name: influxdb-data
      mountPath: /var/lib/influxdb2
    ## Create default user through docker entrypoint
    ## Defaults indicated below
    ##
    adminUser:
      organization: "influxdata"
      bucket: "home-assistant"
      user: "admin"
      retention_policy: "0s"
      ## Leave empty to generate a random password and token.
      ## Or fill any of these values to use fixed values.
      password: "uogFiyfgiyfIYgkbgIYfyFuhbl"
      token: "wgXSklpkhpbZXGEZvojQhwPH-l_bc1dipFksMbvVoePLzdZlKCZoMSgUwVV2UFACaQa0egMiGVwX58S2vcBm1A=="
      ## The password and token are obtained from an existing secret. The expected
      ## keys are `admin-password` and `admin-token`.
      ## If set, the password and token values above are ignored.
      # existingSecret: influxdb-auth