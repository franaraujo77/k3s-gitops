---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: loki
  namespace: observability
spec:
  interval: 10m
  chart:
    spec:
      # renovate: registryUrl=https://grafana.github.io/helm-charts
      chart: loki
      version: 5.8.2
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
      interval: 5m
  dependsOn:
    - name: kube-prometheus-stack
      namespace: observability
    - name: promtail
      namespace: observability
  values:
    #https://grafana.com/docs/loki/next/installation/helm/reference/
    backend:
      image:
        tag: latest
      persistence:
        storageClass: loki-storage-class
      replicas: 2
    read:
      image:
        tag: latest
      persistence:
        storageClass: loki-storage-class
    singleBinary:
      image:
        tag: latest
      persistence:
        storageClass: loki-storage-class
    test:
      image:
        tag: latest
    write:
      image:
        tag: latest
      persistence:
        storageClass: loki-storage-class
    gateway:
      image:
        tag: latest
      # Gateway ingress configuration
      ingress:
        # -- Specifies whether an ingress for the gateway should be created
        enabled: true
        # -- Ingress Class Name. MAY be required for Kubernetes versions >= 1.18
        ingressClassName: ""
        # -- Annotations for the gateway ingress
        annotations: 
          cert-manager.io/issuer: prod-issuer
          cert-manager.io/issuer-kind: OriginIssuer
          cert-manager.io/issuer-group: cert-manager.k8s.cloudflare.com
          field.cattle.io/publicEndpoints: '[{"addresses":["${METALLB_TRAEFIK_ADDR}"],"port":443,"protocol":"HTTPS","serviceName":"observability:loki","ingressName":"observability:loki","hostname":"gateway-loki.${CLUSTER_DOMAIN}","allNodes":false}]'
          meta.helm.sh/release-name: grafana
          meta.helm.sh/release-namespace: observability
          nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
          nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        # -- Hosts configuration for the gateway ingress
        hosts:
          - host: gateway-loki.${CLUSTER_DOMAIN}
            paths:
              - path: /
                # -- pathType (e.g. ImplementationSpecific, Prefix, .. etc.) might also be required by some Ingress Controllers
                # pathType: Prefix
        # -- TLS configuration for the gateway ingress
        tls:
          - secretName: loki-gateway-tls
            hosts:
              - gateway-loki.${CLUSTER_DOMAIN}
    # Use either this ingress or the gateway, but not both at once.
    # If you enable this, make sure to disable the gateway.
    # You'll need to supply authn configuration for your ingress controller.
    ingress:
      enabled: false
      ingressClassName: ""
      annotations: 
        cert-manager.io/issuer: prod-issuer
        cert-manager.io/issuer-kind: OriginIssuer
        cert-manager.io/issuer-group: cert-manager.k8s.cloudflare.com
        field.cattle.io/publicEndpoints: '[{"addresses":["${METALLB_TRAEFIK_ADDR}"],"port":443,"protocol":"HTTPS","serviceName":"observability:loki","ingressName":"observability:loki","hostname":"loki.${CLUSTER_DOMAIN}","allNodes":false}]'
        meta.helm.sh/release-name: grafana
        meta.helm.sh/release-namespace: observability
        nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
        nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
        nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      paths:
        write:
          - /api/prom/push
          - /loki/api/v1/push
        read:
          - /api/prom/tail
          - /loki/api/v1/tail
          - /loki/api
          - /api/prom/rules
          - /loki/api/v1/rules
          - /prometheus/api/v1/rules
          - /prometheus/api/v1/alerts
        singleBinary:
          - /api/prom/push
          - /loki/api/v1/push
          - /api/prom/tail
          - /loki/api/v1/tail
          - /loki/api
          - /api/prom/rules
          - /loki/api/v1/rules
          - /prometheus/api/v1/rules
          - /prometheus/api/v1/alerts
      hosts:
        - loki.${CLUSTER_DOMAIN}
      tls: 
        - secretName: loki-tls
          hosts:
            - loki.${CLUSTER_DOMAIN}
    kubectlImage: 
      tag: latest
    loki:
      # -- Defines what kind of object stores the configuration, a ConfigMap or a Secret.
      # In order to move sensitive information (such as credentials) from the ConfigMap/Secret to a more secure location (e.g. vault), it is possible to use [environment variables in the configuration](https://grafana.com/docs/loki/latest/configuration/#use-environment-variables-in-the-configuration).
      # Such environment variables can be then stored in a separate Secret and injected via the global.extraEnvFrom value. For details about environment injection from a Secret please see [Secrets](https://kubernetes.io/docs/concepts/configuration/secret/#use-case-as-container-environment-variables).
      configStorageType: ConfigMap
      # -- Name of the Secret or ConfigMap that contains the configuration (used for naming even if config is internal).
      externalConfigSecretName: '{{ include "loki.name" . }}'
      # -- Config file contents for Loki
      # @default -- See values.yaml
      config: |
        {{- if .Values.enterprise.enabled}}
        {{- tpl .Values.enterprise.config . }}
        {{- else }}
        auth_enabled: {{ .Values.loki.auth_enabled }}
        {{- end }}

        {{- with .Values.loki.server }}
        server:
          {{- toYaml . | nindent 2}}
        {{- end}}

        memberlist:
        {{- if .Values.loki.extraMemberlistConfig}}
        {{- toYaml .Values.loki.extraMemberlistConfig | nindent 2}}
        {{- end }}
          join_members:
            - {{ include "loki.memberlist" . }}
            {{- with .Values.migrate.fromDistributed }}
            {{- if .enabled }}
            - {{ .memberlistService }}
            {{- end }}
            {{- end }}

        {{- with .Values.loki.ingester }}
        ingester:
          {{- tpl (. | toYaml) $ | nindent 4 }}
        {{- end }}

        {{- if .Values.loki.commonConfig}}
        common:
        {{- toYaml .Values.loki.commonConfig | nindent 2}}
          storage:
          {{- include "loki.commonStorageConfig" . | nindent 4}}
        {{- end}}

        {{- with .Values.loki.limits_config }}
        limits_config:
          {{- tpl (. | toYaml) $ | nindent 4 }}
        {{- end }}

        runtime_config:
          file: /etc/loki/runtime-config/runtime-config.yaml

        {{- with .Values.loki.memcached.chunk_cache }}
        {{- if and .enabled (or .host .addresses) }}
        chunk_store_config:
          chunk_cache_config:
            memcached:
              batch_size: {{ .batch_size }}
              parallelism: {{ .parallelism }}
            memcached_client:
              {{- if .host }}
              host: {{ .host }}
              {{- end }}
              {{- if .addresses }}
              addresses: {{ .addresses }}
              {{- end }}
              service: {{ .service }}
        {{- end }}
        {{- end }}

        {{- if .Values.loki.schemaConfig}}
        schema_config:
        {{- toYaml .Values.loki.schemaConfig | nindent 2}}
        {{- else }}
        schema_config:
          configs:
            - from: 2022-01-11
              store: boltdb-shipper
              object_store: {{ .Values.loki.storage.type }}
              schema: v12
              index:
                prefix: loki_index_
                period: 24h
        {{- end }}

        {{ include "loki.rulerConfig" . }}

        table_manager:
          retention_deletes_enabled: false
          retention_period: 0

        {{- with .Values.loki.memcached.results_cache }}
        query_range:
          align_queries_with_step: true
          {{- if and .enabled (or .host .addresses) }}
          cache_results: {{ .enabled }}
          results_cache:
            cache:
              default_validity: {{ .default_validity }}
              memcached_client:
                {{- if .host }}
                host: {{ .host }}
                {{- end }}
                {{- if .addresses }}
                addresses: {{ .addresses }}
                {{- end }}
                service: {{ .service }}
                timeout: {{ .timeout }}
          {{- end }}
        {{- end }}

        {{- with .Values.loki.storage_config }}
        storage_config:
          {{- tpl (. | toYaml) $ | nindent 4 }}
        {{- end }}

        {{- with .Values.loki.query_scheduler }}
        query_scheduler:
          {{- tpl (. | toYaml) $ | nindent 4 }}
        {{- end }}

        {{- with .Values.loki.compactor }}
        compactor:
          {{- tpl (. | toYaml) $ | nindent 4 }}
        {{- end }}

        {{- with .Values.loki.analytics }}
        analytics:
          {{- tpl (. | toYaml) $ | nindent 4 }}
        {{- end }}

        {{- with .Values.loki.querier }}
        querier:
          {{- tpl (. | toYaml) $ | nindent 4 }}
        {{- end }}

        {{- with .Values.loki.index_gateway }}
        index_gateway:
          {{- tpl (. | toYaml) $ | nindent 4 }}
        {{- end }}

        {{- with .Values.loki.frontend }}
        frontend:
          {{- tpl (. | toYaml) $ | nindent 4 }}
        {{- end }}

        {{- with .Values.loki.frontend_worker }}
        frontend_worker:
          {{- tpl (. | toYaml) $ | nindent 4 }}
        {{- end }}
      # -- The SecurityContext for Loki containers
      containerSecurityContext:
        readOnlyRootFilesystem: true
        capabilities:
          drop:
            - ALL
        allowPrivilegeEscalation: false
      image:
        tag: main
